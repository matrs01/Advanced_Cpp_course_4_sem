1) Почему класс std::string имеет много перегруженных функций-членов?
std::string имеет функции-члены, которые осуществляют операции с итераторами, индексами, строками и с-строками,
в результате чего эти функции-члены имеют болььшое количесвто перегрузок, что приводит к неудобству поддержки и
потенциальной неоптимальности std::string.


2) Как осуществляется интернационализация и локализация программы?
Локализация в C++ осуществляется посредством объекта std::locale, который
учитывает языковые и культурные особенности пользователей. std::locale состоит
из "facets" - специальных "структур", которые работают с локальными параметрами пользователя
(collate, numeric, time)




3) Чем отличаются многобайтовые кодировки от широких кодировок?

Широкие кодировки (UTF-32) используются для хранения "больших" типов данных,
таких как char32_t, с преимуществом в доступе за О(1) к i-тому символу (они имеют фиксированный большой объём памяти,
выделяемый под каждый символ).
Многобайтовые кодировки (UTF-8) используются для хранения 1-4 байтных символов и применяются для
экономии памяти (на каждый символ может выделяться разное число байт)
Многобайтовые кодировки используют больше одного байта только в случае, когда символ не может быть
закодирован одним байтом, в то время как широкие кодировки используют во всех случаях одинаковое
количество байт



4) Какие компоненты входят в стандарт кодирования символов Unicode?
  USC - универсальный набор символов (universal character set) (каждому символу - универсальный код в виде неотрицательного целого числа)
  UTF - множество кодировок (universal transformation format) (способы преобразования кодов для передачи в потоке или в файле)



5) Для решения каких задач удобно использовать регулярные выражения?
Регулярные выражения используются для обнаружения в каком-либо фрагменте некотрых шаблонов-паттернов, заранее известных.
Это может служить для поиска адресов, номеров, дат или любых других шаблонов в тексте.



