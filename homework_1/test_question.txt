Матренок Семён Б02-926
Контрольные вопросы.

1. Какие концепции лежат в основе стандартной библиотеки?
Основной концепцией является то, что программа, написанная одним программистом с использованием стандартной библиотеки,
должна работать у любого другого программиста. В разных компиляторах могут быть разные реализации объектов и функций
стандавтной библиотеки, но поведение у этих реализаций должно быть одинаковое. Кроме того эти реализации должны совмещать
в себе компактность и эффективность.

2. Зачем в проектах используются системы контроля версий?
Основными функциями системы контроля версий явлются, собственно, контроль версий, то есть сохраняется вся история изменений
файлов, что позволяет в случае необходимости откатиться до нужной версии, и возможность совмещения работы программистов с разных
устройств по средствам удаленного репозитория, с которым можно синхронизировать свой локальный репозиторий.

3. Из каких основных действий состоит взаимодействие с Git?
Основными действиями в Git являются:
- клонирование репозитория (git clone)
- создание репозитория (git init)
- создание коммита (git commit)
- отправка коммита на удаленный репозиторий (git push)
- синхронизация локального репозитория с удаленным (git pull)
- создание ветки (git branch)
- слияние веток (git merge)
- перебазирование веток (git rebase)

4. Когда следует создавать отдельные ветки разработки?
При необходимости добавления или изменения кода проекта следует создавать для этого отдельные ветки и после окончания работы
над этими частями кода и успешного тестирования сливать их в главную ветку проекта. Это позволяет избежать нестабильной работы
существующей версии всего проекта при работе над его частями.

5. Какие основные элементы содержатся в библиотеке chrono?
chrono::duration - определяет тип интервала времени
chrono::time_point - определяет количество времени, прошедшее от начала отсчета часов
chrono::steady_clock, chrono::high_resolution_clock, chrono::system_clock - типы объекта clock, который задает начало отсчета
и продолжение такта.

Комментрий по 2 задаче (сравнение git merge и rebase):
git merge сохраняет коммит, от которого отделилась ветка, и все слияния, то есть этот способ дает чуть лучшее понимание истории
коммитов. git rebase позволяет сделать более простой лог и не загромождать его лишними слияниями, но теряется информация о том,
когда ответвилась ветка.